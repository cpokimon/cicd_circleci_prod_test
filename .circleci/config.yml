version: 2.1

commands:
  build_and_test:
    parameters:
      build_command:
        default: docker-compose up -d
        type: string
      test_command:
        default: docker-compose run my_service python ./tests.py
        type: string
    steps:
      - run:
          name: Building services for <<pipeline.git.branch>>
          command: <<parameters.build_command>>
      - run:
          name: Running tests for <<pipeline.git.branch>> branch
          command: docker-compose run my_service python ./tests.py

  publish:
    parameters:
      image:
        default: "cicd_circleci_prod_test_my_service"
        type: string
    steps:
      - run:
          name: Publish on Dockerhub
          command: |
            docker login -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker image tag <<parameters.image>> $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO_NAME:$CIRCLE_SHA1
            docker image tag <<parameters.image>> $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO_NAME:latest
            docker push $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO_NAME:$CIRCLE_SHA1
            docker push $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO_NAME:latest

  deploy:
    parameters:
      command:
        default: "sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml up --build -d"
        type: string
    steps:
      - run:
          name: Deploy on vps
          command: |
            ssh $AZURE_USER_NAME@$AZURE_HOST "
            cd cicd_circleci_prod_test &&
            git checkout master &&
            git pull origin master &&
            sudo docker-compose stop -t 1 &&
            <<parameters.command>>
            "

jobs:
#  build_and_test:
#    machine:
#      image: ubuntu-2004:202010-01
#    steps:
#      - checkout
#      - run:
#          name: Building services for test branch
#          command: |
#            docker-compose up -d
#      - run:
#          name: Running tests for test branch
#          command: |
#            docker-compose run my_service python ./tests.py
  test_test_and_deploy:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - build_and_test:
          build_command: docker-compose up -d
          test_command: docker-compose run my_service python ./tests.py
      - deploy:
          command: sudo docker-compose up --build -d
#      - run:
#          name: Building services for test branch
#          command: |
#            docker-compose up -d
#      - run:
#          name: Running tests for test branch
#          command: |
#            docker-compose run my_service python ./tests.py
#      - run:
#          name: Deploy on test machine
#          command: |
#            ssh $AZURE_USER_NAME@$AZURE_HOST "
#            cd cicd_circleci_prod_test &&
#            git checkout test &&
#            git pull origin test &&
#            sudo docker-compose stop -t 1 &&
#            sudo docker-compose up --build -d
#            "
  prod_build_and_test:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - build_and_test:
          build_command: docker-compose up -d
          test_command: docker-compose run my_service python ./tests.py
#      - run:
#          name: Building services for production
#          command: docker-compose up -d
#      - run:
#          name: Running tests for test branch
#          command: docker-compose run my_service python ./tests.py
  prod_publish_and_deploy:
    machine:
      image: ubuntu-2004:202010-01
    steps:
#      - run:
#          name: Publish on Dockerhub
#          command: |
#            docker login -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
#            docker image tag cicd_circleci_prod_test_my_service $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO_NAME:$CIRCLE_SHA1
#            docker image tag cicd_circleci_prod_test_my_service $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO_NAME:latest
#            docker push $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO_NAME:$CIRCLE_SHA1
#            docker push $DOCKER_HUB_USER_ID/$DOCKER_HUB_REPO_NAME:latest
      - publish
      - deploy:
          command: sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml up --build -d
#      - run:
#          name: Deploy on test machine
#          command: |
#           ssh $AZURE_USER_NAME@$AZURE_HOST "
#           cd cicd_circleci_prod_test &&
#           git checkout master &&
#           git pull origin master &&
#           sudo docker-compose stop -t 1 &&
#           sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml up --build -d
#           "
workflows:
  version: 2
  test:
    jobs:
      - test_test_and_deploy:
          filters:
            branches:
              only: test
  prod:
    jobs:
      - prod_build_and_test:
          filters:
            branches:
              only: main
      - prod_publish_and_deploy:
          type: approval
          requires:
            - prod_build_and_test
